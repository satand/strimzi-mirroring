apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: streams-cluster-backup
spec:
  kafka:
    resources:
      requests:
        memory: 500Mi
        cpu: 500m
      limits:
        memory: 1Gi
        cpu: "1"
    jvmOptions:
      -Xms: 1024m
      -Xmx: 1024m
    version: 3.9.0
    replicas: 3
    rack:
      topologyKey: topology.kubernetes.io/zone
    template:
      pod:
        terminationGracePeriodSeconds: 120
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: strimzi.io/name
                      operator: In
                      values:
                        - streams-cluster-backup-kafka
                topologyKey: topology.kubernetes.io/zone
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
        authentication:
          type: scram-sha-512
      - name: mirroring
        port: 9093
        type: cluster-ip
        tls: false
        authentication:
          type: scram-sha-512
        # Enbale this in case of you want enable a mirroring from backup to primary cluster
        # configuration:
        #   brokers:
        #   - broker: 0
        #     advertisedHost: streams-cluster-backup-kafka-mirroring-0.kafka.svc.clusterset.local
        #   - broker: 1
        #     advertisedHost: streams-cluster-backup-kafka-mirroring-1.kafka.svc.clusterset.local
        #   - broker: 2
        #     advertisedHost: streams-cluster-backup-kafka-mirroring-2.kafka.svc.clusterset.local
    authorization:
      type: simple
      superUsers:
      - backup-mirroring-user
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: "3.9"
      # Disable auto creation of topic on the server
      auto.create.topics.enable: false
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 2Gi
        deleteClaim: false
    logging:
      type: inline
      loggers:
        kafka.root.logger.level: INFO
  zookeeper:
    replicas: 3
    template:
      pod:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: strimzi.io/name
                      operator: In
                      values:
                        - streams-cluster-backup-zookeeper
                topologyKey: topology.kubernetes.io/zone
    resources:
      requests:
        memory: 250Mi
        cpu: 250m
      limits:
        memory: 500Mi
        cpu: 500m
    jvmOptions:
      -Xms: 512m
      -Xmx: 512m
    storage:
      type: persistent-claim
      size: 1Gi
      deleteClaim: false
  entityOperator:
    topicOperator: {}
    userOperator: {}
