apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaMirrorMaker2
metadata:
  name: mm2
spec:
  version: 3.9.0
  replicas: 1
  connectCluster: "cluster-backup" # Must be the target custer
  clusters:
  - alias: "cluster-primary" # Source cluster
    bootstrapServers: streams-cluster-kafka-mirroring-bootstrap.kafka.svc.clusterset.local:9093
    authentication:
      type: scram-sha-512
      username: primary-mirroring-user
      passwordSecret:
        secretName: primary-mirroring-user
        password: password
    config:
      # -1 means it will use the default replication factor configured in the broker
      config.storage.replication.factor: -1
      offset.storage.replication.factor: -1
      status.storage.replication.factor: -1
  - alias: "cluster-backup" # Target cluster
    bootstrapServers: streams-cluster-backup-kafka-mirroring-bootstrap.kafka.svc.cluster.local:9093
    authentication:
      type: scram-sha-512
      username: backup-mirroring-user
      passwordSecret:
        secretName: backup-mirroring-user
        password: password
    config:
      # The following KafkaConnect topics are created by default. You can change the default
      # replication factors (it is 3) and their names here.
      # -1 means it will use the default replication factor configured in the broker
      #
      # Kafka topic that stores connector and task status configurations
      # Replication factor for internal topic 'mirrormaker2-cluster-configs'
      config.storage.replication.factor: -1
      #config.storage.topic: mirrormaker2-cluster-configs
      #
      # Kafka topic that stores connector offsets.
      # Replication factor for internal topic 'mirrormaker2-cluster-offsets'
      offset.storage.replication.factor: -1
      #offset.storage.topic: mirrormaker2-cluster-offsets
      #
      # Kafka topic that stores connector and task status updates.
      # Replication factor for internal topic 'mirrormaker2-cluster-status'
      status.storage.replication.factor: -1
      #status.storage.topic: mirrormaker2-cluster-status
      #
      #ssl.cipher.suites: "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
      #ssl.enabled.protocols: "TLSv1.2"
      #ssl.protocol: "TLSv1.2"
      #compression.type: gzip
      #batch.size: 8192
      # -1 means it will use the default replication factor configured in the broker
  mirrors:
  - sourceCluster: "cluster-primary"
    targetCluster: "cluster-backup"
    sourceConnector:
      tasksMax: 12
      config:
        # The replication factor for mirrored topics created at the target cluster
        replication.factor: -1
        # The replication factor for the MirrorSourceConnector 'offset-syncs' internal topic
        # that maps the offsets of the source and target clusters.
        offset-syncs.topic.replication.factor: -1
        sync.topic.acls.enabled: "false" # This should be fauls when User Operator is enabled
        sync.topic.configs.enabled: "false" # it prevents MirrorMaker 2 to update the configuration for the manually created topics
        refresh.topics.enabled: "false" # it prevents MirrorMaker 2 to update the configuration for the manually created topics
        topic.creation.enable: "false" # it prevents MirrorMaker 2 to update the configuration for the manually created topics
        # Defines the separator used for the renaming of remote topics (useful when mirroring ACTIVE / ACTIVE clusters)
        replication.policy.separator: ""
        # Override automatic renaming (use this policy for ACTIVE / PASSIVE use cases)
        # Instead of prepending the name with the name of the source cluster, the topic retains its original name
        replication.policy.class: "io.strimzi.kafka.connect.mirror.IdentityReplicationPolicy"
        # Refresh interval to check new topics created in source cluster
        refresh.topics.interval.seconds: 60
        #offset-syncs.topic.location: target # In case you want all mm2 internal topic in the target cluster. The mm2-offset-sync topic is created in the source cluster by default.
    heartbeatConnector:
      config:
        # Internal topic 'heartbeats' created at the target cluster
        heartbeats.topic.replication.factor: -1
    checkpointConnector:
      config:
        # Internal topic '<source-cluster-alias>.checkpoints.internal' created at the target cluster
        checkpoints.topic.replication.factor: -1
        # Override automatic renaming (use this policy for ACTIVE / PASSIVE use cases)
        # Instead of prepending the name with the name of the source cluster, the topic retains its original name
        replication.policy.class: "io.strimzi.kafka.connect.mirror.IdentityReplicationPolicy"        
        # Offset synchronization periodically transfers the consumer offsets for the consumer groups
        # of a source cluster into the consumer offsets topic of a target cluster.
        sync.group.offsets.enabled: true
        # Interval period to sync data offsets from source cluster
        sync.group.offsets.interval.seconds: 60
        emit.checkpoints.interval.seconds: 60
        # Interval period to refresh consumer groups statuses (Default: 600)
        refresh.groups.interval.seconds: 60
        #offset-syncs.topic.location: target # In case you want all mm2 internal topic in the target cluster. The mm2-offset-sync topic is created in the source cluster by default.
    topicsPattern: ".*"
    groupsPattern: ".*"
  logging:
    type: inline
    loggers:
      connect.root.logger.level: "INFO"
